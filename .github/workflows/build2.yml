# name: SonarCloud
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened]
# jobs:
#   build2:
#     name: Build and analyze
#     runs-on: windows-latest
#     steps:
#       - name: Set up JDK 11
#         uses: actions/setup-java@v3
#         with:
#           java-version: 11
#           distribution: 'zulu' # Alternative distribution options are available.
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       - name: Cache SonarCloud packages
#         uses: actions/cache@v3
#         with:
#           path: ~\sonar\cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar
#       - name: Cache SonarCloud scanner
#         id: cache-sonar-scanner
#         uses: actions/cache@v3
#         with:
#           path: .\.sonar\scanner
#           key: ${{ runner.os }}-sonar-scanner
#           restore-keys: ${{ runner.os }}-sonar-scanner
#       - name: Install SonarCloud scanner
#         if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
#         shell: powershell
#         run: |
#           New-Item -Path .\.sonar\scanner -ItemType Directory
#           dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
#       - name: Install Coverlet CLI
#         shell: powershell
#         run: |
#          dotnet tool install --global coverlet.console

#       - name: Start SonarCloud Analysis
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         shell: powershell
#         run: .\.sonar\scanner\dotnet-sonarscanner begin /k:"studgantfe7623_CarCore" /o:"studgantfe7623" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=coverage.xml
        

#       - name: Build Project
#         run: dotnet build ./app/Carcore/Carcore.sln --configuration Release
#               # dotnet build ./app/Carcore/Carcore.sln


#       # - name: Run tests with coverage
#       #   run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover


#       - name: Run tests with coverage
#         run: coverlet .\CarCore.Test\bin\Debug\net7.0\CarCore.Test.dll --target "dotnet" --targetargs "test .\Carcore.Test\Carcore.Test.csproj --no-build" -f=opencover -o="coverage.xml"

      
#       - name: End SonarCloud Analysis
#         run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        
          
  
 